// The classes in this file are all related to a Runtime Filter feature detailed
// in RFC 27. A short summary of how they work can be summarized by:
//
// They all are invisible by default. Only after the `initializeRuntime()` code
// adds the context to the data-runtime attribute to the body element is when
// elements with these classes become visible.
//
// More thorough context can be found in: https://github.com/forem/rfcs/pull/27

// Elements with all of these classes are not visible by default
.ForemWebView-only,
.ForemWebView-iOS-only,
.ForemWebView-Android-only,
.Browser-only,
.Browser-iOS-only,
.Browser-Android-only,
.Browser-macOS-only,
.Browser-Windows-only,
.Browser-Linux-only,
.Desktop-only {
  display: none;
}

// Desktop-only helps specialize some actions based on Desktop OS's
body[data-runtime='Browser-Linux'] .Desktop-only,
body[data-runtime='Browser-macOS'] .Desktop-only,
body[data-runtime='Browser-Windows'] .Desktop-only,
body[data-runtime='PWA-Linux'] .Desktop-only,
body[data-runtime='PWA-macOS'] .Desktop-only,
body[data-runtime='PWA-Windows'] .Desktop-only {
  display: var(--runtime-display, block);
}

// Elements with class 'ForemWebView' should be visible on any attribute that
// matches that Medium regardless of OS
body[data-runtime='ForemWebView-iOS'] .ForemWebView-only,
body[data-runtime='ForemWebView-Android'] .ForemWebView-only {
  display: var(--runtime-display, block);
}

// Elements that need to match both 'ForemWebView' Medium and OS
body[data-runtime='ForemWebView-iOS'] .ForemWebView-iOS-only {
  display: var(--runtime-display, block);
}
body[data-runtime='ForemWebView-Android'] .ForemWebView-Android-only {
  display: var(--runtime-display, block);
}

// Elements with class 'Browser' should be visible on any attribute that
// matches that Medium regardless of OS
body[data-runtime='Browser-Android'] .Browser-only,
body[data-runtime='Browser-iOS'] .Browser-only,
body[data-runtime='Browser-Linux'] .Browser-only,
body[data-runtime='Browser-Windows'] .Browser-only,
body[data-runtime='Browser-macOS'] .Browser-only {
  display: var(--runtime-display, block);
}

// Elements that need to match both 'Browser' Medium and OS
body[data-runtime='Browser-Android'] .Browser-Android-only {
  display: var(--runtime-display, block);
}
body[data-runtime='Browser-iOS'] .Browser-iOS-only {
  display: var(--runtime-display, block);
}
body[data-runtime='Browser-Linux'] .Browser-Linux-only {
  display: var(--runtime-display, block);
}
body[data-runtime='Browser-Windows'] .Browser-Windows-only {
  display: var(--runtime-display, block);
}
body[data-runtime='Browser-macOS'] .Browser-macOS-only {
  display: var(--runtime-display, block);
}
